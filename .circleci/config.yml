version: 2
defaults: &defaults
  docker:
    - image: circleci/node:14
  working_directory: ~/repo

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "yarn.lock" }}

  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
      - run: yarn build
      - run: echo build complete
      - run: mkdir build_output
      - run: touch build_output/compiled_output.txt
      - persist_to_workspace:
          root: build_output
          paths:
            - '*'

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: ~/repo/workspace
      - run: ls ~/repo/workspace/compiled_output.txt
      - run: yarn test
      - run: echo test complete

  test-environment:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: ~/repo/workspace
      - run: ls ~/repo/workspace/compiled_output.txt
      - run: yarn test
      - run: echo test-environment complete

  deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: ~/repo/workspace
      - run: ls ~/repo/workspace/compiled_output.txt
      - run: echo deploy complete

workflows:
  version: 2
  test:
    jobs:
      - install
      - build:
          requires:
            - install
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - test-environment:
          requires:
            - test
          filters:
            branch:
              ignore:
                - master
